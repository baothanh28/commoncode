using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace ReplaceStrInJson
{
    class Program
    {
        static void Main(string[] args)
        {
            
        }
        public static void GenerateUIConfig(string inputFilePath, string outputFilePath,Dictionary<string,string>dataSrc)
        {
            var rs=GetContent(inputFilePath, dataSrc);
            WriteToFile(rs, outputFilePath);
        }

        public static string GetContent(string filePath, Dictionary<string, string> source)
        {
            var rs = string.Empty;

            StreamWriter log;
            FileStream fileStream = null;
            
            fileStream = new FileStream(filePath, FileMode.Open);

            log = new StreamWriter(fileStream);
            string[] arr = File.ReadAllLines(filePath);
            
            for (int i = 0; i < arr.Length; i++)
            {
                string line = arr[i];
                line = ReplaceText(arr[i], source);
                rs += line;
            }
            log.Close();


            return rs;
        }

        public static void WriteToFile(string content, string outputFilePath)
        {
            StreamWriter log;
            FileStream fileStream = null;
            DirectoryInfo logDirInfo = null;
            FileInfo logFileInfo;

           
            logFileInfo = new FileInfo(outputFilePath);
            logDirInfo = new DirectoryInfo(logFileInfo.DirectoryName);
            if (!logDirInfo.Exists) logDirInfo.Create();
            if (!logFileInfo.Exists)
            {
                fileStream = logFileInfo.Create();
            }
            else
            {
                fileStream = new FileStream(outputFilePath, FileMode.Append);
            }
            log = new StreamWriter(fileStream);
            log.WriteLine(content);
            log.Close();
        }
        
        public static string ReplaceText(string line,Dictionary<string,string> source)
        {
            Regex regEx = new Regex("[\"\']name[\'\"][ :]+[\"\']([^\"\']*)[\"\']");
            Match match = regEx.Match(line);
            string screenKey;
            if (match.Success)
            {
                if(source.TryGetValue(match.Groups[0].Value,out screenKey))
                {
                    line = line + "\n" + "screencode: " + $"\'{screenKey}\'\n";
                }
            }
            return line;

        }


    }
}
